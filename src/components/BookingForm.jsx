"use client";

import { useStore } from '@/store/useStore'
import axiosRequest from '@/utils/axios'
import { useState } from "react";
import { toast } from "react-toastify";

export default function BookingForm({ car, onClose }) {
  const [formData, setFormData] = useState({
    fullName: "",
    phone: "",
    email: "",
    rentalDays: 1,
    passportFile: null, // —Ñ–∞–π–ª –ø–∞—Å–ø–æ—Ä—Ç–∞
    bookingTime: new Date().toISOString(),
    confirmed: false,
  });
const {postToTelegram}= useStore();
  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({ ...prev, [name]: value }));
  };

  const handleFileChange = (e) => {
    const file = e.target.files[0];
    setFormData((prev) => ({ ...prev, passportFile: file }));
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    if (!formData.fullName || !formData.phone) {
      toast.error("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!");
      return;
    }

    try {
      // –∏—Å–ø–æ–ª—å–∑—É–µ–º FormData –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞
      const data = new FormData();
data.append("carId", car.id); // ID –≤—ã–±—Ä–∞–Ω–Ω–æ–π –º–∞—à–∏–Ω—ã
data.append("carName", car.name); // –ù–∞–∑–≤–∞–Ω–∏–µ –º–∞—à–∏–Ω—ã
data.append("brand", car.brand); // –ú–∞—Ä–∫–∞
data.append("category", car.category); // –ö–∞—Ç–µ–≥–æ—Ä–∏—è
data.append("categoryCar", car.categoryCar); // –¢–∏–ø –∫—É–∑–æ–≤–∞
data.append("price", car.priceNum); // –¶–µ–Ω–∞ —á–∏—Å–ª–æ–º
data.append("fullName", formData.fullName); // –§–ò–û –∫–ª–∏–µ–Ω—Ç–∞
data.append("phone", formData.phone);
data.append("email", formData.email);
data.append("rentalDays", formData.rentalDays);
data.append("bookingTime", formData.bookingTime); // ISO —Å—Ç—Ä–æ–∫–∞
data.append("confirmed", formData.confirmed);
 // true / false
// if (formData.passportFile) {
//   data.append("file", formData.passportFile); // —Ñ–∞–π–ª –ø–∞—Å–ø–æ—Ä—Ç–∞
// }

console.log(car);

      await axiosRequest.post("/orders", {...formData,...car});
    const confirmedText = formData.confirmed ? "‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ" : "‚ùå –ù–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ";
const message = `
üöó *–ù–æ–≤–æ–µ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–º–æ–±–∏–ª—è!*

*–ú–∞—à–∏–Ω–∞:* ${car.name} (${car.brand})
*–ö–∞—Ç–µ–≥–æ—Ä–∏—è:* ${car.category}
*–¢–∏–ø –∫—É–∑–æ–≤–∞:* ${car.categoryCar}
*–¶–µ–Ω–∞:* ${car.price} TJS/–¥–µ–Ω—å

üë§ *–ö–ª–∏–µ–Ω—Ç:*
–§–ò–û: ${formData.fullName}
–¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
Email: ${formData.email}

üìÖ *–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏:*
–î–Ω–µ–π –∞—Ä–µ–Ω–¥—ã: ${formData.rentalDays}
–î–∞—Ç–∞ –∑–∞—è–≤–∫–∏: ${new Date(formData.bookingTime).toLocaleString()}
–°—Ç–∞—Ç—É—Å: ${confirmedText}
`;

await postToTelegram(message);
      toast.success("–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∂–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç–∞!");
      onClose();
    } catch (err) {
      console.error(err);
      toast.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏");
    }
  };

  return (
    <div className="fixed inset-0 bg-black/50 flex items-center justify-center z-50" style={{zIndex:1000}}>
      <div className="bg-white dark:bg-gray-900 rounded-xl p-8 w-full max-w-lg relative">
        <button
          className="absolute top-4 right-4 text-gray-700 dark:text-gray-300 font-bold text-xl"
          onClick={onClose}
        >
          √ó
        </button>
        <h2 className="text-2xl font-bold mb-4 text-gray-900 dark:text-white">
          –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: {car?.name}
        </h2>
        <form className="space-y-4" onSubmit={handleSubmit}>
                    <label htmlFor="fullName">–§–ò–û</label>

          <input
            type="text"
            name="fullName"
            id="fullName"

            placeholder="–§–ò–û"
            className="w-full p-3 rounded-lg border border-gray-300 dark:border-gray-700 bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white"
            value={formData.fullName}
            onChange={handleChange}
            required
          />
          <label htmlFor="phone">–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞</label>

          <input
            type="text"
            name="phone"
            id="phone"

            placeholder="–¢–µ–ª–µ—Ñ–æ–Ω"
            className="w-full p-3 rounded-lg border border-gray-300 dark:border-gray-700 bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white"
            value={formData.phone}
            onChange={handleChange}
            required
          />
          <label htmlFor="email">Email</label>

          <input
            type="email"
            name="email"
            id="email"

            placeholder="Email"
            className="w-full p-3 rounded-lg border border-gray-300 dark:border-gray-700 bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white"
            value={formData.email}
            onChange={handleChange}
          />
          <label htmlFor="rentalDays">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π</label>
          <input
            type="number"
            min="1"
            name="rentalDays"
            id="rentalDays"

            placeholder="–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π –∞—Ä–µ–Ω–¥—ã"
            className="w-full p-3 rounded-lg border border-gray-300 dark:border-gray-700 bg-gray-100 dark:bg-gray-800 text-gray-900 dark:text-white"
            value={formData.rentalDays}
            onChange={handleChange}
          />
          
          
          <button
            type="submit"
            className="w-full bg-[#0080ff] py-3 rounded-lg text-white font-bold hover:bg-[#0066cc] transition"
          >
            –û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
          </button>
        </form>
      </div>
    </div>
  );
}
